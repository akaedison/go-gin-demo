basePath: /v1
definitions:
  model.Book:
    properties:
      author:
        type: string
      book_name:
        type: string
      cover:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      introduction:
        type: string
      price:
        type: number
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  model.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      header_img:
        type: string
      id:
        type: integer
      nick_name:
        type: string
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
      uuid:
        type: string
    type: object
  request.Book:
    properties:
      author:
        type: string
      book_name:
        type: string
      introduction:
        type: string
      price:
        type: number
    required:
    - book_name
    type: object
  request.ChangePassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    required:
    - new_password
    - old_password
    - username
    type: object
  request.GetById:
    properties:
      id:
        type: number
    type: object
  request.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.Register:
    properties:
      header_img:
        type: string
      nick_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  response.LoginResponse:
    properties:
      expires_at:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        description: omitempty nil or default
        type: object
      msg:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: akazwz@icloud.com
    name: API Support
    url: https://akazwz.com
  description: Golang Restful Api Demo
  license:
    name: MIT
    url: MIT
  termsOfService: https://akazwz.com
  title: Golang Restful Api
  version: "1.0"
paths:
  /books:
    delete:
      consumes:
      - application/json
      description: delete book
      parameters:
      - description: id:2
        in: body
        name: reqId
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete A Book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get books
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page_size
        in: query
        name: page_size
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Books
      tags:
      - book
    post:
      consumes:
      - application/json
      description: create book
      parameters:
      - description: json
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/request.Book'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create A Book
      tags:
      - book
    put:
      consumes:
      - application/json
      description: update book
      parameters:
      - description: json
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/request.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update Book
      tags:
      - book
  /file:
    post:
      consumes:
      - multipart/form-data
      description: create file
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create File
      tags:
      - file
  /token:
    post:
      consumes:
      - application/json
      description: create book
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create A Token
      tags:
      - token
  /users:
    get:
      consumes:
      - application/json
      description: get user list
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page_size
        in: query
        name: page_size
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get UserList
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create A User
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: change password
      parameters:
      - description: ChangePassword
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Change Password
      tags:
      - user
swagger: "2.0"
