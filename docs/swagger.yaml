basePath: /v1
definitions:
  model.Book:
    properties:
      author:
        type: string
      book_name:
        type: string
      cover:
        type: string
      created_at:
        type: string
      id:
        type: integer
      introduction:
        type: string
      price:
        type: number
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  request.Book:
    properties:
      author:
        type: string
      book_name:
        type: string
      cover:
        type: string
      introduction:
        type: string
      price:
        type: number
    required:
    - book_name
    type: object
  request.ChangePassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  request.ChangePasswordByPhoneVerificationCode:
    properties:
      new_password:
        type: string
      phone:
        type: string
      verification_code:
        type: string
    required:
    - new_password
    - phone
    - verification_code
    type: object
  request.GetById:
    properties:
      id:
        type: number
    type: object
  request.LoginByOpenId:
    properties:
      code:
        type: string
      encrypt:
        type: string
      iv:
        type: string
    required:
    - code
    type: object
  request.LoginByPhonePwd:
    properties:
      password:
        type: string
      phone:
        type: string
    required:
    - password
    - phone
    type: object
  request.LoginByPhoneVerificationCode:
    properties:
      phone:
        type: string
      verification_code:
        type: string
    required:
    - phone
    - verification_code
    type: object
  request.LoginByUsernamePwd:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.Register:
    properties:
      avatar_url:
        type: string
      nick_name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
      verification_code:
        type: string
    required:
    - password
    - phone
    - username
    - verification_code
    type: object
  request.SetUserAuth:
    properties:
      authority_id:
        type: string
      uuid:
        type: string
    required:
    - authority_id
    - uuid
    type: object
  response.LoginResponse:
    properties:
      expires_at:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/response.UserResponse'
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        description: omitempty nil or default
        type: object
      msg:
        type: string
    type: object
  response.UserResponse:
    properties:
      authority_id:
        type: string
      avatar_url:
        type: string
      nick_name:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: akazwz@icloud.com
    name: API Support
    url: https://akazwz.com
  description: Golang Restful Api Demo
  license:
    name: MIT
    url: MIT
  termsOfService: https://akazwz.com
  title: Golang Restful Api
  version: "1.0"
paths:
  /books:
    delete:
      consumes:
      - application/json
      description: delete book
      parameters:
      - description: id:2
        in: body
        name: reqId
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete A Book
      tags:
      - book
    get:
      consumes:
      - application/json
      description: get books
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page_size
        in: query
        name: page_size
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get Books
      tags:
      - book
    post:
      consumes:
      - application/json
      description: create book
      parameters:
      - description: json
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/request.Book'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create A Book
      tags:
      - book
    put:
      consumes:
      - application/json
      description: update book
      parameters:
      - description: json
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/request.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update Book
      tags:
      - book
  /file:
    post:
      consumes:
      - multipart/form-data
      description: create file
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      - description: md5
        in: formData
        name: md5
        required: true
        type: string
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create File
      tags:
      - file
  /token/open-id:
    post:
      consumes:
      - application/json
      description: create token by open id
      parameters:
      - description: code
        in: body
        name: code
        required: true
        schema:
          $ref: '#/definitions/request.LoginByOpenId'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 小程序 openid 登录
      tags:
      - token
  /token/phone-code:
    post:
      consumes:
      - application/json
      description: create token by phone code
      parameters:
      - description: login by phone verification code
        in: body
        name: loginByPc
        required: true
        schema:
          $ref: '#/definitions/request.LoginByPhoneVerificationCode'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 手机号验证码登录
      tags:
      - token
  /token/phone-pwd:
    post:
      consumes:
      - application/json
      description: create token
      parameters:
      - description: login by phone pwd
        in: body
        name: loginByUp
        required: true
        schema:
          $ref: '#/definitions/request.LoginByPhonePwd'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 手机号密码登录
      tags:
      - token
  /token/username-pwd:
    post:
      consumes:
      - application/json
      description: create token
      parameters:
      - description: login by username pwd
        in: body
        name: loginByUp
        required: true
        schema:
          $ref: '#/definitions/request.LoginByUsernamePwd'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户名密码登录
      tags:
      - token
  /users:
    get:
      consumes:
      - application/json
      description: get user list
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: page_size
        in: query
        name: page_size
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get UserList
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 普通注册
      tags:
      - user
  /users/authority:
    patch:
      consumes:
      - application/json
      description: set userAuthority
      parameters:
      - description: setUserAuth
        in: body
        name: setUserAuth
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Set UserAuthority
      tags:
      - user
  /users/password:
    patch:
      consumes:
      - application/json
      description: change password
      parameters:
      - description: ChangePassword
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 新旧密码普通修改密码
      tags:
      - user
  /users/password/phone-code:
    patch:
      consumes:
      - application/json
      description: change password
      parameters:
      - description: ChangePassword
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordByPhoneVerificationCode'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 手机号验证码修改密码
      tags:
      - user
  /verification/sms:
    get:
      description: Get Verification Code
      parameters:
      - description: phone number
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: 手机号获取验证码
      tags:
      - verification
swagger: "2.0"
